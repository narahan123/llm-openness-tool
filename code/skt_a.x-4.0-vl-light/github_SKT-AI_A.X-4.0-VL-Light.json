{
    "repo": "SKT-AI/A.X-4.0-VL-Light",
    "branch": "main",
    "files": [
        "README.en.md",
        "README.md",
        "assets/A.X_logo.png",
        "assets/benchmark_2x2.png",
        "assets/dokdo.jpg",
        "assets/math.png",
        "assets/mergesort.png",
        "assets/table.png"
    ],
    "license_files": {},
    "readme": "<div align=\"center\">\r\n  <img src=\"./assets/A.X_logo.png\" alt=\"A.X Logo\" width=\"300\"/>\r\n</div>\r\n<br/>\r\n<p align=\"center\">\r\n  <a href=\"https://huggingface.co/skt/A.X-4.0-VL-Light\">🤗 Models</a> |\r\n  <a href=\"https://github.com/SKT-AI/A.X-4.0-VL-Light\">🖥️ Github</a>\r\n</p>\r\n\r\n# A.X 4.0 VL Light: 한국 특화 비전 언어 모델\r\n\r\n[**🇺🇸 View English README**](README.en.md)\r\n\r\nSK텔레콤이 한국 이미지를 정밀하게 이해할 수 있는 비전 언어 모델(Vision Language Model) **A.X 4.0 VL Light**를 2025년 7월 28일 출시하였습니다. A.X 4.0 VL Light는 [A.X 4.0 Light](https://github.com/SKT-AI/A.X-4.0)의 우수한 한국어 이해 및 추론 능력을 기반으로, 방대한 양의 한국 이미지 데이터를 추가로 학습하여 한국어 기반 이미지 이해 및 문서 분석 능력을 실제 업무 환경에 맞게 대폭 강화했습니다. 특히 한국어 텍스트와 이미지가 혼합된 복합적인 문서 구조 이해, 표/그래프와 같은 구조화된 데이터 처리 및 요약 등 실사용 시나리오에서 높은 정확도와 이해력을 제공합니다.\r\n\r\n## A.X 4.0 VL Light, 무엇이 다른가요?\r\n\r\n- **경량 모델**: 70억 개(7B) 매개변수를 가진 경량 언어 모델 A.X 4.0 Light와 4억 개(400M) 매개변수를 가진 비전 모델 SigLIP2를 결합해, 단일 GPU에서도 한국어 비전 태스크를 안정적으로 수행하도록 설계되었습니다.\r\n- **뛰어난 한국 비전 및 언어 이해도**: 한국어 이미지 벤치마크에서 평균 79.4점을 기록하여, 훨씬 큰 규모의 모델인 Qwen2.5-VL-32B(73.4점)보다 더 높은 성능을 보였습니다. 또한, 한국어 텍스트 벤치마크에서는 14B 규모의 국내 비전 언어 모델과 유사한 성능을 달성하면서도 절반 수준의 모델 규모만으로 경쟁력을 입증했습니다.\r\n- **높은 한국 문화 이해도**: 한국어 문화·맥락 이해를 평가하는 멀티모달 벤치마크 K-Viscuit에서 80.2점을 기록하며, Qwen2.5-VL-32B(72.3점) 대비 높은 한국 문화 적합성을 보였습니다.\r\n- **고도화된 문서 이해 능력**: 차트 및 표를 포함한 복잡한 문서 구조 이해를 평가하는 KoBizDoc 벤치마크에서 89.8점을 달성하여, Qwen2.5-VL-32B(88.8점)와 동급 수준의 문서 처리 능력을 보여주었습니다.\r\n-\t**효율적인 토큰 처리**: 동일한 한국어 입력에 대해 A.X 4.0 VL Light는 Qwen2.5-VL 대비 약 41% 적은 토큰을 사용하여 훨씬 더 비용 효율적이고 처리 효율이 높은 운영이 가능합니다.\r\n\r\n## 핵심 기술은?\r\n\r\n### 효과적인 학습 방법\r\n\r\nA.X 4.0 VL Light 학습은 다음 4단계로 진행되었습니다.\r\n1. **비전 인코더 정합(Vision Language Alignment)**: 사전 학습된 비전 인코더의 표현을 A.X 4.0 언어 모델이 이해할 수 있도록 정합합니다.\r\n2. **비전 인코더 사전학습(Vision Encoder Continual Pretraining)**: 실사용 환경을 반영한 대규모 한국어 이미지 및 문서 데이터로 추가 사전학습을 수행해 한국어 기반 시각 이해 능력을 강화했습니다.\r\n3. **비전-언어 지시 이행 학습(Vision-Language Instruction Tuning)**: 다양한 이미지 관련 작업에서 사용자 맞춤형의 구조화된 응답을 생성할 수 있도록 비전 인코더와 언어 모델을 공동 학습해 지시 이행 성능을 높였습니다.\r\n4. **비전-언어 사후 학습(Vision-Language Post-Training)**: 일반 지식 대화부터 추론, 수리, 코딩 등 전문 지식 뿐만 아니라 기업 특화 데이터도 학습해 언어 모델의 강점을 유지하면서, 다양한 시각 추론 데이터를 학습하여 비전 문제 해결 능력을 전방위로 향상시켰습니다.\r\n\r\n위 전략은 검증된 언어 모델의 폭넓은 기능을 유지하면서도, 한정된 자원으로 한국 이미지 처리 능력을 빠르게 고도화할 수 있다는 장점이 있습니다.\r\n\r\n### A.X 4.0의 장점 계승\r\n\r\nA.X 4.0 VL Light는 A.X 4.0을 기반 모델로 사용하며, 기존 모델이 가진 **우수한 한국어 처리 성능**과 **기업 환경에 최적화된 활용성**을 계승하도록 설계되었습니다. 실제 사용 환경에서는 다음과 같은 특징과 장점을 가집니다:\r\n\r\n- **우수한 한국어 이해 및 생성 능력**: 대화, 요약, 추론, 지시 이행 등 다양한 언어 과제에서 고성능 언어 모델 수준의 자연스러운 응답과 정확한 생성 능력을 보여줍니다.\r\n- **뛰어난 한국 지식 및 문화 이해도**: 대규모 고품질의 한국어 데이터셋을 학습하여, 한국 사회, 역사, 문화 전반에 대한 이해도가 높아 공공·교육·문화 분야에도 효과적으로 활용할 수 있습니다.\r\n- **효율적인 토큰 처리**: 한국어에 최적화된 토크나이저를 사용하여, 동일한 입력에서도 타 모델 대비 더 적은 토큰으로 표현이 가능하며, 긴 문서를 다루는 문서 요약, 검색 증강 생성(RAG) 등 업무 시나리오에서 운영 비용 절감 효과를 제공합니다.\r\n\r\n### 고품질 데이터 구축 파이프라인\r\n\r\n고품질 데이터 구축 파이프라인은 국내 환경에 특화된 모델 개발에 필요한 데이터의 절대량과 품질을 확보하는 핵심 기술입니다.\r\nSK텔레콤은 자체적으로 대규모 한국어 멀티모달 데이터 구축 파이프라인을 설계하고 운영해왔으며, 이를 통해 한국 이미지와 문서 기반의 데이터를 직접 수집·정제·가공하여 학습에 활용하고 있습니다.\r\n이러한 체계적인 데이터 구축 노력의 결과로, A.X 4.0 VL Light는 한국어 기반 비전-언어 태스크 전반에서 동급 대비 최고 수준의 성능을 달성했습니다.\r\n\r\n주요 데이터 구축 영역은 다음과 같습니다.\r\n- 한국 이미지에 기반한 설명 및 시각 기반 대화 데이터\r\n- 한국 문서, 표, 차트를 활용한 지시 이행 학습용 데이터\r\n- 한국어 문서의 구조 분석 및 변환(파싱) 데이터\r\n- 단계적 논리 추론 및 수리 문제 해결을 위한 고난도 텍스트-시각 혼합 데이터\r\n\r\n\r\n## 벤치마크 측정 결과\r\n\r\n- A.X 4.0 VL Light는 KoEduBench (58.1), K-Viscuit (80.2), K-DTCBench (89.6) 등 한국 지식/문화/문서 벤치마크에서 동급은 물론 상위 파라미터 모델까지 앞서는 탁월한 성능을 보입니다.\r\n- 한국어 지식 평가 지표인 KMMLU (59.4), 지시 이행 평가 지표인 Ko-IFEval (71.8)에서 타 모델 대비 우세하여 균형 잡힌 한국어 처리 능력을 갖췄습니다.\r\n\r\n### 이미지 벤치마크\r\n\r\n\\* 표시는 한국어 벤치마크임을 의미하며, K-Viscuit은 한국어 번역본으로 평가했습니다.\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th rowspan=\"2\">Category</th>\r\n      <th rowspan=\"2\">Benchmarks</th>\r\n    </tr>\r\n    <tr>\r\n      <th>A.X 4.0 VL Light</th>\r\n      <th>Qwen2.5-VL-7B</th>\r\n      <th>InternVL3-8B</th>\r\n      <th>VARCO-VISION-2.0-14B</th>\r\n      <th>Qwen2.5-VL-32B</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <!-- Document -->\r\n    <tr><td rowspan=\"6\">Document</td><td>KoBizDoc*</td><td>89.8</td><td>84.0</td><td>73.2</td><td>83.0</td><td>88.8</td></tr>\r\n    <tr><td>K-DTCBench*</td><td>90.0</td><td>86.7</td><td>83.8</td><td>80.8</td><td>91.7</td></tr>\r\n    <tr><td>ChartQA</td><td>79.8</td><td>80.6</td><td>79.8</td><td>78.8</td><td>81.8</td></tr>\r\n    <tr><td>DocVQA</td><td>94.4</td><td>95.3</td><td>92.4</td><td>91.9</td><td>94.5</td></tr>\r\n    <tr><td>InfoVQA</td><td>78.5</td><td>82.7</td><td>76.2</td><td>80.0</td><td>82.7</td></tr>\r\n    <tr><td>SEEDBench2-Plus</td><td>69.7</td><td>71.2</td><td>69.7</td><td>71.9</td><td>73.3</td></tr>\r\n    <!-- OCR -->\r\n    <tr><td rowspan=\"3\">OCR</td><td>OutdoorKorean*</td><td>97.3</td><td>91.9</td><td>72.7</td><td>79.7</td><td>86.9</td></tr>\r\n    <tr><td>K-Handwriting*</td><td>84.3</td><td>85.0</td><td>43.5</td><td>55.2</td><td>60.1</td></tr>\r\n    <tr><td>TextVQA</td><td>82.0</td><td>85.4</td><td>82.1</td><td>80.3</td><td>79.8</td></tr>\r\n    <!-- Culture -->\r\n    <tr><td rowspan=\"1\">Culture</td><td>K-Viscuit*</td><td>80.2</td><td>65.0</td><td>65.3</td><td>72.0</td><td>72.3</td></tr>\r\n    <!-- Knowledge -->\r\n    <tr><td rowspan=\"4\">Knowledge</td><td>KoEduBench*</td><td>58.1</td><td>53.9</td><td>53.9</td><td>39.4</td><td>52.4</td></tr>\r\n    <tr><td>KoCertBench*</td><td>54.9</td><td>50.1</td><td>39.4</td><td>51.4</td><td>47.5</td></tr>\r\n    <tr><td>MMMU</td><td>54.1</td><td>56.3</td><td>59.4</td><td>58.3</td><td>63.6</td></tr>\r\n    <tr><td>ScienceQA</td><td>95.3</td><td>87.2</td><td>97.8</td><td>92.2</td><td>92.4</td></tr>\r\n    <!-- General -->\r\n    <tr><td rowspan=\"3\">General</td><td>K-LLAVA-W*</td><td>83.2</td><td>73.0</td><td>67.0</td><td>80.0</td><td>84.3</td></tr>\r\n    <tr><td>K-SEED*</td><td>76.5</td><td>76.4</td><td>76.4</td><td>76.9</td><td>77.3</td></tr>\r\n    <tr><td>SEEDBench_IMG</td><td>76.7</td><td>77.1</td><td>77.1</td><td>78.1</td><td>77.6</td></tr>\r\n    <!-- Hallucination -->\r\n    <tr><td rowspan=\"1\">Hallucination</td><td>HallusionBench</td><td>54.2</td><td>52.7</td><td>49.6</td><td>53.8</td><td>58.0</td></tr>\r\n    <!-- IF -->\r\n    <tr><td rowspan=\"1\">IF</td><td>MM-IFEval</td><td>53.5</td><td>51.4</td><td>51.9</td><td>50.8</td><td>59.3</td></tr>\r\n  </tbody>\r\n</table>\r\n\r\n다음은 한국 이미지 및 한국 특화 지식 영역에서 모델 성능을 엄밀하게 평가하기 위해 SK텔레콤에서 구축한 벤치마크 목록입니다.\r\n- KoBizDoc: 한국어 비즈니스 문서를 이해하기 위한 VQA 벤치마크\r\n- OutdoorKorean: 복잡한 야외 장면에서 한국어 문자를 인식하는 벤치마크 (AIHub 제공)\r\n- K-Handwriting: 다양한 필체를 포함한 한국어 손글씨 인식하는 벤치마크 (AIHub 제공)\r\n- KoEduBench: 검정고시, 대학수학능력검정시험 문제로 구성된 한국 지식 추론 VQA 벤치마크\r\n- KoCertBench: 한국 자격증 시험 문제를 다루는 전문적인 VQA 벤치마크\r\n\r\n### 언어 벤치마크\r\n\r\n\\* 표시는 한국어 벤치마크입니다.\r\n\r\n<table>\r\n  <thead>\r\n    <tr>\r\n      <th rowspan=\"2\">Category</th>\r\n      <th rowspan=\"2\">Benchmarks</th>\r\n    </tr>\r\n    <tr>\r\n      <th>A.X 4.0 VL Light</th>\r\n      <th>Qwen2.5-VL-7B</th>\r\n      <th>InternVL3-8B</th>\r\n      <th>VARCO-VISION-2.0-14B</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <!-- Knowledge -->\r\n    <tr><td rowspan=\"2\">Knowledge</td><td>KMMLU*</td><td>60.5</td><td>45.6</td><td>50.9</td><td>58.8</td></tr>\r\n    <tr><td>MMLU</td><td>72.6</td><td>71.9</td><td>77.5</td><td>80.7</td></tr>\r\n    <!-- Math -->\r\n    <tr><td rowspan=\"2\">Math</td><td>HRM8K*</td><td>40.6</td><td>25.4</td><td>34.6</td><td>49.5</td></tr>\r\n    <tr><td>MATH</td><td>56.5</td><td>61.7</td><td>65.1</td><td>71.1</td></tr>\r\n    <!-- General -->\r\n    <tr><td rowspan=\"2\">General</td><td>Ko-MT-bench*</td><td>68.9</td><td>51.5</td><td>59.5</td><td>75.9</td></tr>\r\n    <tr><td>MT-bench</td><td>72.9</td><td>73.2</td><td>69.9</td><td>76.6</td></tr>\r\n    <!-- Instruction Following -->\r\n    <tr><td rowspan=\"2\">IF</td><td>Ko-IFEval*</td><td>71.8</td><td>55.0</td><td>46.1</td><td>57.2</td></tr>\r\n    <tr><td>IFEval</td><td>81.9</td><td>66.6</td><td>67.5</td><td>75.3</td></tr>\r\n  </tbody>\r\n</table>\r\n\r\n언어 벤치마크는 A.X 4.0 평가시 사용한 방식을 동일하게 적용하여 평가하였습니다.\r\n\r\n## 활용 예시\r\n\r\n\r\n### 예제 1: 한국 랜드마크 설명\r\n<div align=\"left\">\r\n  <img src=\"./assets/dokdo.jpg\" alt=\"Dokdo\" width=\"400\"/>\r\n</div>\r\n\r\n🙋‍♂️ 이 섬에 대해 설명해줘.\r\n\r\n<details><summary>👉 A.X 4.0 VL Light의 답변 보기</summary>\r\n<blockquote>\r\n\r\n독도는 대한민국의 동해에 위치한 섬으로, 울릉도에서 동남쪽으로 약 87.4km 떨어져 있습니다. 이 섬은 두 개의 주요 섬인 동도와 서도로 이루어져 있으며, 주변에는 89개의 작은 바위섬들이 있습니다.\r\n\r\n## 독도의 특징\r\n- 위치: 동해, 울릉도 동남쪽 87.4km\r\n- 구성: 동도와 서도, 89개의 작은 바위섬\r\n- 지형: 가파른 절벽과 바위들로 이루어져 있으며, 겨울철에는 눈이 쌓여 하얀 풍경을 자아냅니다.\r\n- 주변 환경: 푸른 바다와 하얀 파도가 어우러져 아름다운 경관을 제공합니다.\r\n\r\n## 역사적, 지리적 중요성\r\n- 역사적 의미: 독도는 역사적으로 대한민국의 영토로 인정받아 왔습니다. 여러 역사적 기록과 문헌에서 독도가 한국의 영토임을 확인할 수 있습니다.\r\n- 지리적 중요성: 독도는 동해의 전략적 요충지로, 해양 자원 개발과 안보 측면에서 중요한 역할을 합니다.\r\n\r\n## 인프라\r\n- 등대: 섬의 중앙에는 하얀 등대가 위치해 있으며, 이는 항해 안전을 위해 중요한 역할을 합니다.\r\n- 건물: 등대 주변으로는 몇 채의 건물이 자리 잡고 있어, 관리 인력의 거주와 관리를 위한 시설이 마련되어 있습니다.\r\n- 부두: 섬의 해안가에는 콘크리트로 만들어진 부두가 있으며, 이는 선박의 정박을 가능하게 합니다.\r\n\r\n독도는 자연의 아름다움과 역사적, 지리적 중요성을 동시에 지닌 특별한 섬입니다. 이 섬을 방문하면 자연의 위엄과 함께 한국의 역사를 깊이 이해할 수 있는 좋은 기회가 될 것입니다. 혹시 독도에 대한 다른 궁금한 점이 있으면 말씀해 주세요!\r\n\r\n</blockquote>\r\n\r\n</details>\r\n\r\n\r\n</br>\r\n\r\n### 예제 2: 표 그림 → LaTeX 형식 변환\r\n<div align=\"left\">\r\n  <img src=\"./assets/table.png\" alt=\"Table\" width=\"600\"/>\r\n</div>\r\n\r\n\r\n🙋‍♂️ 표를 latex로 표현해줘.\r\n\r\n<details><summary>👉 A.X 4.0 VL Light의 답변 보기</summary>\r\n\r\n```\r\n\\documentclass[border=10pt]{standalone}\r\n\\usepackage{booktabs}\r\n\\usepackage{colortbl}\r\n\\usepackage{xcolor}\r\n\\usepackage{multirow}\r\n\\usepackage{array}\r\n\\usepackage{fontspec}\r\n\\setmainfont{Calibri}\r\n\r\n\\definecolor{header}{RGB}{0,102,204}\r\n\\definecolor{odd}{RGB}{245,245,245}\r\n\\definecolor{even}{RGB}{255,255,255}\r\n\r\n\\begin{document}\r\n\\begin{tabular}{l l *{4}{>{\\centering\\arraybackslash}p{2cm}}}\r\n\\rowcolor{header}\\textcolor{white}{\\textbf{Category}} & \\textcolor{white}{\\textbf{Benchmarks}} & \\textcolor{white}{\\textbf{A.X 4.0 VL Light}} & \\textcolor{white}{\\textbf{Qwen2.5-VL-7B}} & \\textcolor{white}{\\textbf{InternVL3-8B}} & \\textcolor{white}{\\textbf{VARCO-VISION-2.0-14B}} \\\\\r\n\\hline\r\n\\rowcolor{odd}Knowledge & KMMLU* & 60.5 & 45.6 & 50.9 & 58.8 \\\\\r\n& MMLU & 72.6 & 71.9 & 77.5 & 80.7 \\\\\r\n\\rowcolor{odd}Math & HRM8K* & 40.6 & 25.4 & 34.6 & 49.5 \\\\\r\n& MATH & 56.5 & 61.7 & 65.1 & 71.1 \\\\\r\n\\rowcolor{odd}General & Ko-MT-bench* & 68.9 & 51.5 & 59.5 & 75.9 \\\\\r\n& MT-bench & 72.9 & 73.2 & 69.9 & 76.6 \\\\\r\n\\rowcolor{odd}IF & Ko-IFEval* & 71.8 & 55.0 & 46.1 & 57.2 \\\\\r\n& IFEval & 81.9 & 66.6 & 67.5 & 75.3 \\\\\r\n\\end{tabular}\r\n\\end{document}\r\n```\r\n\r\n</details>\r\n\r\n</br>\r\n\r\n### 예제 3: 차트 그림 → Markdown 형식 변환\r\n<div align=\"left\">\r\n  <img src=\"./assets/benchmark_2x2.png\" alt=\"<Benchmark>\" width=\"600\"/>\r\n</div>\r\n\r\n🙋‍♂️ 이 사진에 나온 각 모델의 벤치마크별 성능을 markdown 테이블로 소숫점 첫째자리까지 정리해줘.\r\n\r\n<details><summary>👉 A.X 4.0 VL Light의 답변 보기</summary>\r\n<blockquote>\r\n\r\n|   | A.X 4.0 VL Light | Qwen2.5-VL-7B | InternVL-8B | Varco-Vision-2.0-14B | Qwen2.5-VL-32B |\r\n| --- | --- | --- | --- | --- | --- |\r\n| Knowledge | 57.3 | 53.6 | 53.6 | 39.1 | 52.1 |\r\n| Culture | 80.0 | 64.4 | 64.6 | 71.9 | 72.3 |\r\n| Document | 89.7 | 86.4 | 83.7 | 80.4 | 91.8 |\r\n| Language | 60.3 | 45.4 | 51.1 | 58.9 | 55.0 |\r\n\r\n</blockquote>\r\n</details>\r\n\r\n<br/>\r\n\r\n\r\n### 예제 4: 코드 구현\r\n<div align=\"left\">\r\n  <img src=\"./assets/mergesort.png\" alt=\"<Merge Sort>\" width=\"600\"/>\r\n</div>\r\n\r\n🙋‍♂️ 이 알고리즘을 코드로 구현해줘.\r\n\r\n<details><summary>👉 A.X 4.0 VL Light의 답변 보기</summary>\r\n<blockquote>\r\n\r\n# 병합 정렬 알고리즘 코드 구현\r\n\r\n병합 정렬(Merge Sort)은 분할 정복(Divide and Conquer) 전략을 사용하는 효율적인 정렬 알고리즘입니다. 이 알고리즘은 리스트를 재귀적으로 반으로 나누고, 각 부분을 정렬한 후 다시 합치는 과정을 반복합니다. 아래는 Python으로 구현한 병합 정렬 알고리즘의 코드입니다:\r\n\r\n```python\r\ndef merge_sort(arr):\r\n    # 리스트의 길이가 1 이하일 경우 이미 정렬된 상태이므로 반환\r\n    if len(arr) <= 1:\r\n        return arr\r\n    \r\n    # 리스트를 두 부분으로 나눔\r\n    mid = len(arr) // 2\r\n    left_half = arr[:mid]\r\n    right_half = arr[mid:]\r\n    \r\n    # 각 부분을 재귀적으로 정렬\r\n    left_sorted = merge_sort(left_half)\r\n    right_sorted = merge_sort(right_half)\r\n    \r\n    # 두 정렬된 부분을 병합\r\n    return merge(left_sorted, right_sorted)\r\n\r\ndef merge(left, right):\r\n    merged = []\r\n    left_index = 0\r\n    right_index = 0\r\n    \r\n    # 두 리스트를 비교하여 작은 값을 merged 리스트에 추가\r\n    while left_index < len(left) and right_index < len(right):\r\n        if left[left_index] < right[right_index]:\r\n            merged.append(left[left_index])\r\n            left_index += 1\r\n        else:\r\n            merged.append(right[right_index])\r\n            right_index += 1\r\n    \r\n    # 남은 요소들을 merged 리스트에 추가\r\n    merged.extend(left[left_index:])\r\n    merged.extend(right[right_index:])\r\n    \r\n    return merged\r\n\r\n# 예시 배열\r\narr = [21, 10, 12, 20, 25, 13, 15, 22]\r\nsorted_arr = merge_sort(arr)\r\nprint(\"정렬된 배열:\", sorted_arr)\r\n```\r\n\r\n## 코드 설명\r\n- **merge_sort 함수**: \r\n  - 입력된 배열의 길이가 1 이하일 경우 이미 정렬된 상태이므로 그대로 반환합니다.\r\n  - 배열을 중간 지점에서 두 부분으로 나눕니다.\r\n  - 각 부분을 재귀적으로 `merge_sort` 함수를 호출하여 정렬합니다.\r\n  - 정렬된 두 부분을 `merge` 함수를 통해 병합합니다.\r\n\r\n- **merge 함수**:\r\n  - 두 개의 정렬된 리스트를 받아서 하나의 정렬된 리스트로 병합합니다.\r\n  - 두 포인터를 사용하여 각 리스트의 요소를 비교하고, 더 작은 값을 결과 리스트에 추가합니다.\r\n  - 한 리스트의 모든 요소가 추가되면, 다른 리스트의 남은 요소들을 결과 리스트에 추가합니다.\r\n\r\n이 코드를 실행하면, 주어진 배열 `[21, 10, 12, 20, 25, 13, 15, 22]`가 정렬되어 `[10, 12, 13, 15, 20, 21, 22, 25]`로 출력됩니다. 병합 정렬은 시간 복잡도가 O(n log n)으로 효율적이며, 안정적인 정렬 알고리즘입니다.\r\n\r\n</blockquote>\r\n</details>\r\n\r\n<br/>\r\n\r\n### 예제 5: 수학 문제 풀이\r\n\r\n<div align=\"left\">\r\n  <img src=\"./assets/math.png\" alt=\"Math\" width=\"400\"/>\r\n</div>\r\n\r\n🙋‍♂️ 이 문제를 두가지 다른 방식으로 풀어봐. 수식과 기호는 $$를 이용해서 표현해.\r\n\r\n<details><summary>👉 A.X 4.0 VL Light의 답변 보기</summary>\r\n\r\n<blockquote>\r\n\r\n### 풀이 1: 점 (5, 0)을 이용한 방법\r\n\r\n1. **주어진 함수와 점 대입**:\r\n   - 함수 $y = \\sqrt{x-1} + a$에 점 $(5, 0)$을 대입합니다.\r\n   - $0 = \\sqrt{5-1} + a$\r\n\r\n2. **방정식 풀이**:\r\n   - $0 = \\sqrt{4} + a$\r\n   - $0 = 2 + a$\r\n   - $a = -2$\r\n\r\n따라서, 상수 $a$의 값은 $-2$입니다.\r\n\r\n### 풀이 2: 점근선과 교점 이용\r\n\r\n1. **함수 분석**:\r\n   - 함수 $y = \\sqrt{x-1} + a$는 $y = \\sqrt{x-1}$을 $y$축 방향으로 $a$만큼 평행이동한 것입니다.\r\n   - $y = \\sqrt{x-1}$의 점근선은 $x = 1$입니다.\r\n\r\n2. **교점 확인**:\r\n   - 그래프에서 $x = 1$일 때 $y = -2$임을 확인할 수 있습니다.\r\n   - 따라서, $y = \\sqrt{x-1} + a$에 $x = 1$, $y = -2$를 대입합니다.\r\n   - $-2 = \\sqrt{1-1} + a$\r\n   - $-2 = 0 + a$\r\n   - $a = -2$\r\n\r\n따라서, 상수 $a$의 값은 $-2$입니다.\r\n\r\n</blockquote>\r\n</details>\r\n\r\n## 마무리하며\r\n\r\n**A.X 4.0 VL Light**는 한국어와 한국 이미지·문서 처리에 특화된 비전 언어 모델로, 기업 환경에서 요구되는 정확도, 처리 효율, 데이터 보안 요건을 모두 만족시키는 **실전형 AI 모델**입니다. SK텔레콤은 고품질의 한국어 및 비전 데이터를 기반으로 A.X 4.0 VL Light를 정교하게 학습하였으며, 이는 단순한 대안이 아닌 국내 비전 언어 AI 도입을 위한 **최적의 선택지**로 자리매김할 수 있습니다.\r\n\r\n더 자세한 정보가 필요하시거나 궁금한 점이 있으시면 아래 연락처로 편하게 문의해 주시기 바랍니다.\r\n\r\n**연락처**: [a.x@sk.com](mailto:a.x@sk.com)\r\n",
    "py_files": {}
}